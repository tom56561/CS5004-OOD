package lab02;
/**
 * A FibonacciCounter represents how far along we are in the
 * Fibonacci sequence.
 * It has a minimum value of 0.
 * 
 * @author eddie
 *
 */
public class FibonacciCounter {
  
  private final int count;
  
  
  public FibonacciCounter(int initialCount) {
    this.count = initialCount;
  }
  
  /**
   * Returns the Fibonacci Number for current count.
   * @return the count number in the Fibonacci Sequence
   */
  public int getFibonacciNumber() {
    
    double sqrtFive = Math.sqrt(5);
    Double fibValue = new Double ((1 / sqrtFive) * 
        (Math.pow((1 + sqrtFive) / 2, this.count) - Math.pow((1 - sqrtFive) / 2, this.count)));
    return fibValue.intValue();
  }
  
  public FibonacciCounter incrementedBy1() {
    FibonacciCounter result = new FibonacciCounter(this.count + 1);
    return result;
  }
  
  public FibonacciCounter decrementedBy1() {
    FibonacciCounter result;
    if (this.count <= 0) {      
      result = new FibonacciCounter(this.count - 1);
    } else {
      result = new FibonacciCounter(this.count);
    }
    return result;
  }
  
  
  
}
